import Resolver from"../resolver.js";import{ResolverOptions,SearchResults,IntermediateSearchResults}from"../type.js";Resolver.prototype.handler=function(a,b){let c=b[0];if(c.then){const c=this;return Promise.all(b).then(function(b){return c[a].apply(c,b)})}if(c[0]&&c[0].index)return this[a].apply(this,c);let d,e,f,g=[],h=[],j=0,k=0;for(let c,l=0;l<b.length;l++)if(c=b[l],c){let b;if(c.constructor===Resolver)b=c.result;else if(c.constructor===Array)b=c;else if(j=c.limit||0,k=c.offset||0,f=c.suggest,e=c.resolve,d=c.enrich&&e,c.index)c.resolve=!1,!1,b=c.index.search(c).result,c.resolve=e,!1;else if(c.and)b=this.and(c.and);else if(c.or)b=this.or(c.or);else if(c.xor)b=this.xor(c.xor);else if(c.not)b=this.not(c.not);else continue;if(b.then)h.push(b);else if(b.length)g[l]=b;else if(!f&&("and"===a||"xor"===a)){g=[];break}}return{final:g,promises:h,limit:j,offset:k,enrich:d,resolve:e,suggest:f}};