import Resolver from"../resolver.js";import{SearchResults,EnrichedSearchResults,IntermediateSearchResults}from"../type.js";import{apply_enrich}from"../document/search.js";Resolver.prototype.not=function(){const{final:a,promises:b,limit:c,offset:d,enrich:e,resolve:f,suggest:g}=this.handler("not",arguments);return return_result.call(this,a,b,c,d,e,f,g)};function return_result(a,b,c,d,e,f,g){if(b.length){const h=this;return Promise.all(b).then(function(b){a=[];for(let c,d=0;d<b.length;d++)(c=b[d]).length&&(a[d]=c);return return_result.call(h,a,[],c,d,e,f,g)})}if(a.length&&this.result.length)this.result=exclusion.call(this,a,c,d,f);else if(f)return this.resolve(c,d,e);return f?e?apply_enrich.call(this.index,this.result):this.result:this}function exclusion(a,b,c,d){const e=[],f=new Set(a.flat().flat());for(let g,h=0,i=0;h<this.result.length;h++)if(g=this.result[h],g)for(let a,j=0;j<g.length;j++)if(a=g[j],!f.has(a)){if(c){c--;continue}if(d){if(e.push(a),e.length===b)return e;}else if(e[h]||(e[h]=[]),e[h].push(a),++i===b)return e}return e}