import Resolver from"../resolver.js";import{get_max_len}from"../common.js";import{intersect}from"../intersect.js";import{SearchResults,EnrichedSearchResults,IntermediateSearchResults,ResolverOptions}from"../type.js";import{apply_enrich}from"../document/search.js";Resolver.prototype.and=function(){let a,b,c,d,e=this.result.length;if(!e){const f=arguments[0];f&&(e=!!f.suggest,d=f.resolve,a=f.limit,b=f.offset,c=f.enrich&&d)}if(e){const{final:a,promises:b,limit:c,offset:d,enrich:e,resolve:f,suggest:g}=this.handler("and",arguments);return return_result.call(this,a,b,c,d,e,f,g)}return d?this.resolve(a,b,c):this};function return_result(a,b,c,d,e,f,g){if(b.length){const h=this;return Promise.all(b).then(function(b){a=[];for(let c,d=0;d<b.length;d++)(c=b[d]).length&&(a[d]=c);return return_result.call(h,a,[],c,d,e,f,g)})}if(!a.length)g||(this.result=a);else if(this.result.length&&a.unshift(this.result),2>a.length)this.result=a[0];else{const b=get_max_len(a);if(!b)this.result=[];else return this.result=intersect(a,b,c,d,g,this.boostval,f),f?e?apply_enrich.call(this.index,this.result):this.result:this}return f?this.resolve(c,d,e):this}